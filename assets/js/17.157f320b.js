(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{413:function(a,t,s){"use strict";s.r(t);var e=s(55),p=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"webpack是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack是什么"}},[a._v("#")]),a._v(" webpack是什么？")]),a._v(" "),s("p",[a._v("前端模块化打包（构建）工具。\nwebpack可以看作是 模块打包机：它做的是，分析你项目结构，找到JavaScript模块、其他的一些浏览器不能直接运行的拓展语言（Scss , less等）以及新语法（像ES6等）\n，并将其转换和打包为合适的格式供浏览器使用。")]),a._v(" "),s("h2",{attrs:{id:"为什么要使用webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用webpack"}},[a._v("#")]),a._v(" 为什么要使用webpack？")]),a._v(" "),s("p",[a._v("1、浏览器不识别SAA、LESS ==>需要对less/sass预编译成css  => 供浏览器使用；（光这一步就需要手动使用一个工具）")]),a._v(" "),s("p",[a._v("2、项目中的模块化以及互相之间引用依赖造成文件分散  ==> 需要把各个分散的模块集中打包成大文件，减少HTTP的链接的请求次数（这一步也需要一个工具）")]),a._v(" "),s("p",[a._v("3、打包成了大文件，体积就变大了 ==> 所以代码要进行压缩（这一步还需要一个工具）")]),a._v(" "),s("p",[a._v("4、部分ES6语法有兼容问题 => ES5 ==>浏览器使用  （这里还需要一个工具")]),a._v(" "),s("p",[a._v("5、以上这些操作，在webpack里，只需要配置好，一下就可以搞定了。")]),a._v(" "),s("h2",{attrs:{id:"webpack的核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack的核心"}},[a._v("#")]),a._v(" webpack的核心")]),a._v(" "),s("p",[a._v("1、入口(entry)：要打包哪个文件")]),a._v(" "),s("p",[a._v("2、出口(output)：要打包到哪里")]),a._v(" "),s("p",[a._v("3、加载器(loader)：加载除了js文件其他文件的功能")]),a._v(" "),s("p",[a._v("4、插件(plugins)：处理加载器完成不了的功能，使用插件")])])}),[],!1,null,null,null);t.default=p.exports}}]);