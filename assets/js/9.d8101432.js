(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{405:function(n,t,e){"use strict";e.r(t);var r=e(55),a=Object(r.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"工作中常用函数工具收集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作中常用函数工具收集"}},[n._v("#")]),n._v(" 工作中常用函数工具收集")]),n._v(" "),e("p",[n._v("1、async await 错误处理方法")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/* 方法抽取 */\nconst to = promise => {\n  return promise.then(res => [null, res]).catch(error => [error]);\n};\n")])])]),e("p",[n._v("举个栗子:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('let flag = true;\n\nfunction fetchVehicle() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (flag) {\n        resolve(true);\n      } else {\n        reject(false);\n      }\n    }, 1000);\n  });\n}\n\nasync function fn() {\n  // 每个异步都需要处理\n  let [error, res] = await to(fetchVehicle())\n  console.log("error", error);\n  console.log("res", res);\n}\n\nfn();\n')])])]),e("p",[n._v("2、判断及获取类型")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("export function getType (val) {\n  return Object.prototype.toString.call(val).slice(8,-1)\n}\nexport function isObject(val) {\n  return Object.prototype.toString.call(val).slice(8,-1) === 'Object'\n}\nexport function isArray(val) {\n  return Object.prototype.toString.call(val).slice(8,-1) === 'Array'\n}\nexport function isString(val) {\n  return Object.prototype.toString.call(val).slice(8,-1) === 'String'\n}\n")])])]),e("p",[n._v("3、 获取 url 中的参数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("export function getUrlParam() {\n  const href = window.location.href\n  const i = href.indexOf(\"?\");\n  if (i < 0) return null;\n  const str = href.slice(i);\n  if (!str) return null;\n  const arr = str.match(/([^?&=#]+)=([^?&=#/]*)/g);\n  if (!arr) return null;\n  const obj = {}\n  arr.forEach(v => {\n    const temp = v.split('=');\n    if (temp.length > 0) {\n      obj[temp[0]] = temp[1];\n    }\n  })\n  if (name) return obj[name]\n  return obj\n}\n\n")])])]),e("p",[n._v("4、防抖及节流函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// 防抖\nexport function debounce(fn, time = 200) {\n  let timeout = null // 创建一个标记用来存放定时器的返回值\n  return function() {\n    clearTimeout(timeout) // 每当用户输入的时候把前一个 setTimeout clear 掉\n    timeout = setTimeout(() => { // 然后又创建一个新的 setTimeout, 这样就能保证输入字符后的 interval 间隔内如果还有字符输入的话，就不会执行 fn 函数\n      fn.apply(this, arguments)\n    }, time)\n  }\n}\n// 节流\nexport function _throttle(fn, interval = 200) {\n  var last\n  var timer\n  return function() {\n    var th = this\n    var args = arguments\n    var now = +new Date()\n    if (last && now - last < interval) {\n      clearTimeout(timer)\n      timer = setTimeout(function() {\n        last = now\n        fn.apply(th, args)\n      }, interval)\n    } else {\n      last = now\n      fn.apply(th, args)\n    }\n  }\n}\n\n使用:\nmethods: {\n  doSomeThings:debounce(() => {\n\n  })\n}\n\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);